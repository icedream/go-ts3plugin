// Code generated by "stringer -type=LogType,LogLevel -output generated_logtypes_string.go"; DO NOT EDIT.

package teamlog

import "strconv"

const (
	_LogType_name_0 = "NoneFileConsole"
	_LogType_name_1 = "Userlogging"
	_LogType_name_2 = "NoNetlogging"
	_LogType_name_3 = "Database"
	_LogType_name_4 = "Syslog"
)

var (
	_LogType_index_0 = [...]uint8{0, 4, 8, 15}
)

func (i LogType) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _LogType_name_0[_LogType_index_0[i]:_LogType_index_0[i+1]]
	case i == 4:
		return _LogType_name_1
	case i == 8:
		return _LogType_name_2
	case i == 16:
		return _LogType_name_3
	case i == 32:
		return _LogType_name_4
	default:
		return "LogType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _LogLevel_name = "CriticalErrorWarningDebugInfoDevel"

var _LogLevel_index = [...]uint8{0, 8, 13, 20, 25, 29, 34}

func (i LogLevel) String() string {
	if i >= LogLevel(len(_LogLevel_index)-1) {
		return "LogLevel(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LogLevel_name[_LogLevel_index[i]:_LogLevel_index[i+1]]
}
